items:
- uid: Microsoft.DocAsCode.Utility.StringExtension
  id: StringExtension
  parent: Microsoft.DocAsCode.Utility
  children:
  - Microsoft.DocAsCode.Utility.StringExtension.ForwardSlashCombine(System.String,System.String)
  - Microsoft.DocAsCode.Utility.StringExtension.BackSlashToForwardSlash(System.String)
  - Microsoft.DocAsCode.Utility.StringExtension.ToArray(System.String,System.StringSplitOptions,System.Char[])
  - Microsoft.DocAsCode.Utility.StringExtension.ToDelimitedString(System.Collections.Generic.IEnumerable{System.String},System.String)
  - Microsoft.DocAsCode.Utility.StringExtension.GetNormalizedFullPathKey(System.Collections.Generic.IEnumerable{System.String})
  - Microsoft.DocAsCode.Utility.StringExtension.GetNormalizedFullPathList(System.Collections.Generic.IEnumerable{System.String})
  - Microsoft.DocAsCode.Utility.StringExtension.GetNormalizedPathList(System.Collections.Generic.IEnumerable{System.String})
  - Microsoft.DocAsCode.Utility.StringExtension.ToNormalizedFullPath(System.String)
  - Microsoft.DocAsCode.Utility.StringExtension.ToNormalizedPath(System.String)
  - Microsoft.DocAsCode.Utility.StringExtension.CoalesceNullOrEmpty(System.String,System.String)
  href: Microsoft.DocAsCode.Utility.StringExtension.yml
  name: StringExtension
  fullName: Microsoft.DocAsCode.Utility.StringExtension
  type: Class
  source:
    remote: &o0
      path: src/Microsoft.DocAsCode.Utility/Extensions.cs
      branch: dev
      repo: https://github.com/aspnet/docfx.git
      key: 9c90d3ed
    path: src/Microsoft.DocAsCode.Utility/Extensions.cs
    startLine: 19
  assemblies:
  - Microsoft.DocAsCode.Utility
  namespace: Microsoft.DocAsCode.Utility
  syntax:
    content: public class StringExtension
    content.vb: Public Class StringExtension
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Microsoft.DocAsCode.Utility.StringExtension.ForwardSlashCombine(System.String,System.String)
  id: ForwardSlashCombine(System.String,System.String)
  parent: Microsoft.DocAsCode.Utility.StringExtension
  href: Microsoft.DocAsCode.Utility.StringExtension.yml
  name: ForwardSlashCombine(String, String)
  fullName: Microsoft.DocAsCode.Utility.StringExtension.ForwardSlashCombine(System.String, System.String)
  type: Method
  source:
    remote: *o0
    path: src/Microsoft.DocAsCode.Utility/Extensions.cs
    startLine: 21
  assemblies:
  - Microsoft.DocAsCode.Utility
  namespace: Microsoft.DocAsCode.Utility
  syntax:
    content: public static string ForwardSlashCombine(string baseAddress, string relativeAddress)
    content.vb: Public Shared Function ForwardSlashCombine(baseAddress As String, relativeAddress As String) As String
    parameters:
    - id: baseAddress
      type: System.String
    - id: relativeAddress
      type: System.String
    return:
      type: System.String
      description: 
- uid: Microsoft.DocAsCode.Utility.StringExtension.BackSlashToForwardSlash(System.String)
  id: BackSlashToForwardSlash(System.String)
  parent: Microsoft.DocAsCode.Utility.StringExtension
  href: Microsoft.DocAsCode.Utility.StringExtension.yml
  name: BackSlashToForwardSlash(String)
  fullName: Microsoft.DocAsCode.Utility.StringExtension.BackSlashToForwardSlash(System.String)
  type: Method
  source:
    remote: *o0
    path: src/Microsoft.DocAsCode.Utility/Extensions.cs
    startLine: 26
  assemblies:
  - Microsoft.DocAsCode.Utility
  namespace: Microsoft.DocAsCode.Utility
  syntax:
    content: public static string BackSlashToForwardSlash(string input)
    content.vb: Public Shared Function BackSlashToForwardSlash(input As String) As String
    parameters:
    - id: input
      type: System.String
    return:
      type: System.String
      description: 
- uid: Microsoft.DocAsCode.Utility.StringExtension.ToArray(System.String,System.StringSplitOptions,System.Char[])
  id: ToArray(System.String,System.StringSplitOptions,System.Char[])
  parent: Microsoft.DocAsCode.Utility.StringExtension
  href: Microsoft.DocAsCode.Utility.StringExtension.yml
  name: ToArray(String, StringSplitOptions, Char[])
  name.vb: ToArray(String, StringSplitOptions, Char())
  fullName: Microsoft.DocAsCode.Utility.StringExtension.ToArray(System.String, System.StringSplitOptions, System.Char[])
  fullName.vb: Microsoft.DocAsCode.Utility.StringExtension.ToArray(System.String, System.StringSplitOptions, System.Char())
  type: Method
  source:
    remote: *o0
    path: src/Microsoft.DocAsCode.Utility/Extensions.cs
    startLine: 32
  assemblies:
  - Microsoft.DocAsCode.Utility
  namespace: Microsoft.DocAsCode.Utility
  syntax:
    content: public static string[] ToArray(string input, StringSplitOptions option, params char[] delimiter)
    content.vb: Public Shared Function ToArray(input As String, option As StringSplitOptions, ParamArray delimiter As Char()) As String()
    parameters:
    - id: input
      type: System.String
    - id: option
      type: System.StringSplitOptions
    - id: delimiter
      type: System.Char[]
    return:
      type: System.String[]
      description: 
- uid: Microsoft.DocAsCode.Utility.StringExtension.ToDelimitedString(System.Collections.Generic.IEnumerable{System.String},System.String)
  id: ToDelimitedString(System.Collections.Generic.IEnumerable{System.String},System.String)
  parent: Microsoft.DocAsCode.Utility.StringExtension
  href: Microsoft.DocAsCode.Utility.StringExtension.yml
  name: ToDelimitedString(IEnumerable<String>, String)
  name.vb: ToDelimitedString(IEnumerable(Of String), String)
  fullName: Microsoft.DocAsCode.Utility.StringExtension.ToDelimitedString(System.Collections.Generic.IEnumerable<System.String>, System.String)
  fullName.vb: Microsoft.DocAsCode.Utility.StringExtension.ToDelimitedString(System.Collections.Generic.IEnumerable(Of System.String), System.String)
  type: Method
  source:
    remote: *o0
    path: src/Microsoft.DocAsCode.Utility/Extensions.cs
    startLine: 42
  assemblies:
  - Microsoft.DocAsCode.Utility
  namespace: Microsoft.DocAsCode.Utility
  syntax:
    content: public static string ToDelimitedString(IEnumerable<string> input, string delimiter = ",")
    content.vb: Public Shared Function ToDelimitedString(input As IEnumerable(Of String), delimiter As String = ",") As String
    parameters:
    - id: input
      type: System.Collections.Generic.IEnumerable{System.String}
    - id: delimiter
      type: System.String
    return:
      type: System.String
      description: 
- uid: Microsoft.DocAsCode.Utility.StringExtension.GetNormalizedFullPathKey(System.Collections.Generic.IEnumerable{System.String})
  id: GetNormalizedFullPathKey(System.Collections.Generic.IEnumerable{System.String})
  parent: Microsoft.DocAsCode.Utility.StringExtension
  href: Microsoft.DocAsCode.Utility.StringExtension.yml
  name: GetNormalizedFullPathKey(IEnumerable<String>)
  name.vb: GetNormalizedFullPathKey(IEnumerable(Of String))
  fullName: Microsoft.DocAsCode.Utility.StringExtension.GetNormalizedFullPathKey(System.Collections.Generic.IEnumerable<System.String>)
  fullName.vb: Microsoft.DocAsCode.Utility.StringExtension.GetNormalizedFullPathKey(System.Collections.Generic.IEnumerable(Of System.String))
  type: Method
  source:
    remote: *o0
    path: src/Microsoft.DocAsCode.Utility/Extensions.cs
    startLine: 52
  assemblies:
  - Microsoft.DocAsCode.Utility
  namespace: Microsoft.DocAsCode.Utility
  syntax:
    content: public static string GetNormalizedFullPathKey(IEnumerable<string> list)
    content.vb: Public Shared Function GetNormalizedFullPathKey(list As IEnumerable(Of String)) As String
    parameters:
    - id: list
      type: System.Collections.Generic.IEnumerable{System.String}
    return:
      type: System.String
      description: 
- uid: Microsoft.DocAsCode.Utility.StringExtension.GetNormalizedFullPathList(System.Collections.Generic.IEnumerable{System.String})
  id: GetNormalizedFullPathList(System.Collections.Generic.IEnumerable{System.String})
  parent: Microsoft.DocAsCode.Utility.StringExtension
  href: Microsoft.DocAsCode.Utility.StringExtension.yml
  name: GetNormalizedFullPathList(IEnumerable<String>)
  name.vb: GetNormalizedFullPathList(IEnumerable(Of String))
  fullName: Microsoft.DocAsCode.Utility.StringExtension.GetNormalizedFullPathList(System.Collections.Generic.IEnumerable<System.String>)
  fullName.vb: Microsoft.DocAsCode.Utility.StringExtension.GetNormalizedFullPathList(System.Collections.Generic.IEnumerable(Of System.String))
  type: Method
  source:
    remote: *o0
    path: src/Microsoft.DocAsCode.Utility/Extensions.cs
    startLine: 61
  assemblies:
  - Microsoft.DocAsCode.Utility
  namespace: Microsoft.DocAsCode.Utility
  syntax:
    content: public static IEnumerable<string> GetNormalizedFullPathList(IEnumerable<string> paths)
    content.vb: Public Shared Function GetNormalizedFullPathList(paths As IEnumerable(Of String)) As IEnumerable(Of String)
    parameters:
    - id: paths
      type: System.Collections.Generic.IEnumerable{System.String}
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: 
- uid: Microsoft.DocAsCode.Utility.StringExtension.GetNormalizedPathList(System.Collections.Generic.IEnumerable{System.String})
  id: GetNormalizedPathList(System.Collections.Generic.IEnumerable{System.String})
  parent: Microsoft.DocAsCode.Utility.StringExtension
  href: Microsoft.DocAsCode.Utility.StringExtension.yml
  name: GetNormalizedPathList(IEnumerable<String>)
  name.vb: GetNormalizedPathList(IEnumerable(Of String))
  fullName: Microsoft.DocAsCode.Utility.StringExtension.GetNormalizedPathList(System.Collections.Generic.IEnumerable<System.String>)
  fullName.vb: Microsoft.DocAsCode.Utility.StringExtension.GetNormalizedPathList(System.Collections.Generic.IEnumerable(Of System.String))
  type: Method
  source:
    remote: *o0
    path: src/Microsoft.DocAsCode.Utility/Extensions.cs
    startLine: 69
  assemblies:
  - Microsoft.DocAsCode.Utility
  namespace: Microsoft.DocAsCode.Utility
  syntax:
    content: public static IEnumerable<string> GetNormalizedPathList(IEnumerable<string> paths)
    content.vb: Public Shared Function GetNormalizedPathList(paths As IEnumerable(Of String)) As IEnumerable(Of String)
    parameters:
    - id: paths
      type: System.Collections.Generic.IEnumerable{System.String}
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: 
- uid: Microsoft.DocAsCode.Utility.StringExtension.ToNormalizedFullPath(System.String)
  id: ToNormalizedFullPath(System.String)
  parent: Microsoft.DocAsCode.Utility.StringExtension
  href: Microsoft.DocAsCode.Utility.StringExtension.yml
  name: ToNormalizedFullPath(String)
  fullName: Microsoft.DocAsCode.Utility.StringExtension.ToNormalizedFullPath(System.String)
  type: Method
  source:
    remote: *o0
    path: src/Microsoft.DocAsCode.Utility/Extensions.cs
    startLine: 84
  assemblies:
  - Microsoft.DocAsCode.Utility
  namespace: Microsoft.DocAsCode.Utility
  summary: >-
    Should not convert path to lower case as under Linux/Unix, path is case sensitive

    Also, Website URL should be case sensitive consider the server might be running under Linux/Unix

    So we could even not lower the path under Windows as the generated YAML should be ideally OS irrelevant
  syntax:
    content: public static string ToNormalizedFullPath(string path)
    content.vb: Public Shared Function ToNormalizedFullPath(path As String) As String
    parameters:
    - id: path
      type: System.String
      description: 
    return:
      type: System.String
      description: 
- uid: Microsoft.DocAsCode.Utility.StringExtension.ToNormalizedPath(System.String)
  id: ToNormalizedPath(System.String)
  parent: Microsoft.DocAsCode.Utility.StringExtension
  href: Microsoft.DocAsCode.Utility.StringExtension.yml
  name: ToNormalizedPath(String)
  fullName: Microsoft.DocAsCode.Utility.StringExtension.ToNormalizedPath(System.String)
  type: Method
  source:
    remote: *o0
    path: src/Microsoft.DocAsCode.Utility/Extensions.cs
    startLine: 90
  assemblies:
  - Microsoft.DocAsCode.Utility
  namespace: Microsoft.DocAsCode.Utility
  syntax:
    content: public static string ToNormalizedPath(string path)
    content.vb: Public Shared Function ToNormalizedPath(path As String) As String
    parameters:
    - id: path
      type: System.String
    return:
      type: System.String
      description: 
- uid: Microsoft.DocAsCode.Utility.StringExtension.CoalesceNullOrEmpty(System.String,System.String)
  id: CoalesceNullOrEmpty(System.String,System.String)
  parent: Microsoft.DocAsCode.Utility.StringExtension
  href: Microsoft.DocAsCode.Utility.StringExtension.yml
  name: CoalesceNullOrEmpty(String, String)
  fullName: Microsoft.DocAsCode.Utility.StringExtension.CoalesceNullOrEmpty(System.String, System.String)
  type: Method
  source:
    remote: *o0
    path: src/Microsoft.DocAsCode.Utility/Extensions.cs
    startLine: 96
  assemblies:
  - Microsoft.DocAsCode.Utility
  namespace: Microsoft.DocAsCode.Utility
  syntax:
    content: public static string CoalesceNullOrEmpty(string value, string defaultValue)
    content.vb: Public Shared Function CoalesceNullOrEmpty(value As String, defaultValue As String) As String
    parameters:
    - id: value
      type: System.String
    - id: defaultValue
      type: System.String
    return:
      type: System.String
      description: 
references:
- uid: Microsoft.DocAsCode.Utility
  isExternal: false
  name: Microsoft.DocAsCode.Utility
  fullName: Microsoft.DocAsCode.Utility
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.StringSplitOptions
  parent: System
  isExternal: true
  name: StringSplitOptions
  fullName: System.StringSplitOptions
- uid: System.Char[]
  isExternal: true
  name: Char[]
  name.vb: Char()
  fullName: System.Char[]
  fullName.vb: System.Char()
  spec.csharp:
  - uid: System.Char
    name: Char
    fullName: System.Char
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Char
    name: Char
    fullName: System.Char
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.String[]
  isExternal: true
  name: String[]
  name.vb: String()
  fullName: System.String[]
  fullName.vb: System.String()
  spec.csharp:
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  name.vb: IEnumerable(Of String)
  fullName: System.Collections.Generic.IEnumerable<System.String>
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  name.vb: IEnumerable(Of T)
  fullName: System.Collections.Generic.IEnumerable<T>
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
